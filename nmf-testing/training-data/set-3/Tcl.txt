American inventions~Cross-platform free software~Cross-platform software~Dynamically typed programming languages~Free compilers and interpreters~Free software programmed in C~High-level programming languages~Homoiconic programming languages~Multi-paradigm programming languages~Object-oriented programming languages~Procedural programming languages~Programming languages created in 1988~Scripting languages~Tcl programming language family~Text-oriented programming languages~
||||||
Tcl
||||||
Tcl (pronounced "tickle" or as an initialism) is a high-level, general-purpose, interpreted, dynamic programming language. It was designed with the goal of being very simple but powerful. Tcl casts everything into the mold of a command, even programming constructs like variable assignment and procedure definition. Tcl supports multiple programming paradigms, including object-oriented, imperative and functional programming or procedural styles.
It is commonly used embedded into C applications, for rapid prototyping, scripted applications, GUIs, and testing. Tcl interpreters are available for many operating systems, allowing Tcl code to run on a wide variety of systems. Because Tcl is a very compact language, it is used on embedded systems platforms, both in its full form and in several other small-footprint versions.The popular combination of Tcl with the Tk extension is referred to as Tcl/Tk, and enables building a graphical user interface (GUI) natively in Tcl. Tcl/Tk is included in the standard Python installation in the form of Tkinter.