Architectural pattern (computer science)~Enterprise application integration~Service-oriented (business computing)~Software design patterns~Web services~
||||||
Service-oriented architecture
||||||
In software engineering, service-oriented architecture (SOA) is an architectural style that focuses on discrete services instead of a monolithic design. By consequence, it is also applied in the field of software design where services are provided to the other components by application components, through a communication protocol over a network. A service is a discrete unit of functionality that can be accessed remotely and acted upon and updated independently, such as retrieving a credit card statement online. SOA is also intended to be independent of vendors, products and technologies.Service orientation is a way of thinking in terms of services and service-based development and the outcomes of services.A service has four properties according to one of many definitions of SOA:
It logically represents a repeatable business activity with a specified outcome.
It is self-contained.
It is a black box for its consumers, meaning the consumer does not have to be aware of the service's inner workings.
It may be composed of other services.Different services can be used in conjunction as a service mesh to provide the functionality of a large software application, a principle SOA shares with modular programming. Service-oriented architecture integrates distributed, separately maintained and deployed software components. It is enabled by technologies and standards that facilitate components' communication and cooperation over a network, especially over an IP network.
SOA is related to the idea of an API (application programming interface), an interface or communication protocol between different parts of a computer program intended to simplify the implementation and maintenance of software.  An API can be thought of as the service, and the SOA the architecture that allows the service to operate.