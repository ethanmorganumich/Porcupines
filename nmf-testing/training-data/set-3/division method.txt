Binary arithmetic~Computer arithmetic~Computer arithmetic algorithms~Division (mathematics)~
||||||
Division algorithm
||||||
A division algorithm is an algorithm which, given two integers N and D, computes their quotient and/or remainder, the result of Euclidean division. Some are applied by hand, while others are employed by digital circuit designs and software.
Division algorithms fall into two main categories: slow division and fast division. Slow division algorithms produce one digit of the final quotient per iteration. Examples of slow division include restoring, non-performing restoring, non-restoring, and SRT division. Fast division methods start with a close approximation to the final quotient and produce twice as many digits of the final quotient on each iteration. Newtonâ€“Raphson and Goldschmidt algorithms fall into this category.
Variants of these algorithms allow using fast multiplication algorithms. It results that, for large integers, the computer time needed for a division is the same, up to a constant factor, as the time needed for a multiplication, whichever multiplication algorithm is used.
Discussion will refer to the form 
  
    
      
        N
        
          /
        
        D
        =
        (
        Q
        ,
        R
        )
      
    
    {\displaystyle N/D=(Q,R)}
  , where

N = numerator (dividend)
D = denominator (divisor)is the input, and

Q = quotient
R = remainderis the output.